# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false
jobs: 
   deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
       - uses: mc-actions/configure@v1
         env: 
            S3_SERVER: ${{ secrets.ENDPOINT }}
            S3_ACCESS_KEY: ${{ secrets.GRIPIRADAR_ACCESS_KEY }}
            S3_SECRET_KEY: ${{ secrets.GRIPIRADAR_SECRET_KEY }}
         with:
            s3_server: $S3_SERVER
            s3_access_key: $S3_ACCESS_KEY
            s3_secret_key: $S3_SECRET_KEY
       - shell: bash
         run: |
              mc ls default \
              && mc cp -r default/gripiradar-ut-ee .
       - name: Run the render process with Docker
         uses: addnab/docker-run-action@v3
         with:
            image: taavipall/gripiradar:latest
            options: -v ${{ github.workspace }}:/work 
            run: |
                ls /work
                Rscript /work/scripts/render.R
                rm -rf gripiradar-ut-ee
       - name: Setup Pages
         uses: actions/configure-pages@v5
       - name: Upload artifact
         uses: actions/upload-pages-artifact@v3
         with:
          # Upload entire repository
          path: '.'
       - name: Deploy to GitHub Pages
         id: deployment
         uses: actions/deploy-pages@v4
