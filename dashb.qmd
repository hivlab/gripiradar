---
title: "Gripiradar"
author: "by Gripiradar crowd"
format: 
  dashboard:
    logo: images/logo.png
    self-contained: true
---

```{r, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, message = FALSE)
```

```{r}
library(tidyverse)
library(here)
library(jsonlite)
library(sf)
library(ggspatial)
library(cowplot)
library(ggfortify)
library(patchwork)
source(here("scripts/my_label_date_short.R"))
colors <- c("#2C5696", "#39870C", "#EEA230", "#D92321", "#CCE0F1", "lightgray")
old <- theme_set(theme_minimal())
```


```{r}
last_saturday <- floor_date(today(), "week") - days(1)
last_4_weeks <- interval(last_saturday - weeks(4), last_saturday)
last_6_months <- interval((last_saturday - months(6)), last_saturday)
weekly_responses_files <- list.files(here(), recursive = TRUE, full.names = TRUE, pattern = "weekly_responses") %>% 
  tibble(weekly_responses_files = .) %>% 
  mutate(
    wrf = basename(weekly_responses_files),
    i = str_split(wrf, "[_.]"),
    start = map_chr(i, 3),
    end = map_chr(i, 4),
    intl = interval(as.Date(start), as.Date(end)) 
    ) %>% 
  filter(intl %within% last_6_months) %>%
  pull(weekly_responses_files)
weekly_responses <- weekly_responses_files %>% 
  map(\(x) read_csv(x, show_col_types = FALSE)) %>% 
  set_names(basename(weekly_responses_files)) %>% 
  bind_rows(.id = "id") %>% 
  separate(id, into = c("out1", "out2", "start_date", "end_date", "out3"), sep = "[_\\.]") %>% 
  mutate(
    type = paste0(out1,"_", out2),
    across(ends_with("date"), \(x) as.Date(x, tz = "")),
    intvl = interval(start_date, end_date)
  ) %>% 
  group_by(intvl, participantID) %>% 
  filter(submitted == max(submitted)) %>% 
  ungroup() %>% 
  select(type, start_date, end_date, intvl, participantID, starts_with("weekly"))
weekly_si <- read_csv(here("data/survey_info_weekly.csv"), show_col_types = FALSE)
```


```{r}
sihtnumbrid <- read_delim(
  here("data/sihtnumbrid.csv"), 
  delim = ";", 
  escape_double = FALSE, 
  trim_ws = TRUE, 
  show_col_types = FALSE
) %>% 
  rename_all(str_to_lower)
mk <- st_read(here("data/maakond_shp/maakond.shp"), quiet = TRUE)
df_sf <- st_as_sf(sihtnumbrid, coords = c('viitepunkt_x', 'viitepunkt_y'))
```


```{r}
intake_responses_files <- list.files(here(), recursive = TRUE, full.names = TRUE, pattern = "intake_responses")
intake_responses <- intake_responses_files %>% 
  map(read_csv, show_col_types = FALSE) %>% 
  set_names(basename(intake_responses_files)) %>% 
  bind_rows(.id = "id") %>% 
  separate(id, into = c("out1", "out2", "start_date", "end_date", "out3"), sep = "[_\\.]") %>% 
  mutate(
    type = paste0(out1,"_", out2),
    across(ends_with("date"), \(x) as.Date(x, tz = ""))
  ) %>% 
  select(type, start_date, end_date, participantID, starts_with("intake"))
intake_si <- read_csv(here("data/survey_info_intake.csv"), show_col_types = FALSE)
```


```{r}
demographics <- intake_responses %>% 
  mutate(
    int = interval(start_date, end_date)
    ) %>% 
  select(int, end_date, participantID, female = intake.Q1, birth_date = intake.Q2, zip_code = intake.Q3.0) %>% 
  mutate(
    birth_date = as.Date(as_datetime(birth_date)),
    age = (end_date - birth_date) / dyears(1),
    Gender = factor(female, labels = c("Male", "Female", "Other")),
    age_group = cut(age, breaks = seq(0, 100, by = 10)),
    age_group = as.character(age_group),
    age_group = str_replace_all(age_group, ",", "-"),
    age_group = str_extract(age_group, "\\d+-\\d+")
    )
```


```{r}
fmt_label <- function(intvl) {
  if (year(int_start(intvl)) == year(int_end(intvl))) {
    return(paste(format(int_start(intvl), "%d-%b"), "\u2014", format(int_end(intvl), "%d-%b")))
  } else {
    return(paste(format(int_start(intvl), "%d-%b-%Y"), "\u2014", format(int_end(intvl), "%d-%b-%Y")))
  }
}
wri <- weekly_responses %>% 
  filter(intvl %within% last_4_weeks) %>%
  select(intvl, participantID, matches("weekly.Q1")) %>% 
  pivot_longer(starts_with("weekly"), names_to = "key") %>% 
  mutate(
    question_nr = "weekly.Q1",
    across(key, \(x) str_remove_all(x, "weekly.Q1."))
  ) %>% 
  inner_join(weekly_si) %>% 
  mutate(
    Interval = map_chr(intvl, fmt_label),
    Interval = fct_reorder(Interval, intvl)
  )
symptoms <- wri %>% 
  group_by(Interval) %>% 
  mutate(npid = n_distinct(participantID)) %>% 
  group_by(Interval, label, npid) %>% 
  summarise(value = sum(value))

symptoms_sum <- symptoms %>% 
  ungroup() %>%
  filter(as.numeric(fct_rev(Interval)) < 3, label == "No symptoms") %>% 
  mutate(
    symptoms = npid - value,
    no_symptoms = value
  )

sym_change <- signif(diff(symptoms_sum$symptoms / symptoms_sum$npid) * 100, digits = 1)
pt <- prop.test(symptoms_sum$symptoms, symptoms_sum$npid)
get_arrow <- function(sym_change, pt) {
  if (pt$p.value < 0.05) {
    if (sym_change < 0) {
      return("arrow-down")
    } else {
      return("arrow-up")
    }
  } else {
    return("arrow-right")
  }
}
```

## Row

```{r, include=FALSE}
active_users_n <- n_distinct(
    weekly_responses %>% 
      # filter(last_saturday %within% intvl) %>% 
      pull(participantID)
    )
```


```{r}
#| content: valuebox
#| title: "Active users"
#| icon: person-fill
#| color: "secondary"
list(value = active_users_n)
```

```{r, include=FALSE}
#| content: valuebox
#| title: "Symptoms change since week before last week"
#| color: "primary"
list(
  icon = get_arrow(sym_change, pt),
  value = paste(sym_change, "p.p.")
)
```


## Row {height=60%}

```{r}
active_users <- weekly_responses %>% 
  group_by(intvl) %>%
  distinct() %>% 
  count() %>% 
  ungroup()
active_users %>% 
  ggplot(aes(as.Date(int_end(intvl)), n)) +
  geom_line(color = colors[1]) +
  geom_point(color = colors[1]) +
  scale_y_continuous(limits = c(0, NA)) +
  scale_x_date(date_breaks = "2 weeks", labels = my_label_date_short(format = c("%Y", "%b", "%d", "%H:%M"), sep = "-")) +
  labs(title = "Active users (weekly)") +
  theme(
    axis.title = element_blank()
  )
```



```{r}
symptoms_p <- symptoms %>% 
  filter(!str_detect(label, "No symptoms")) %>% 
  ggplot(aes(fct_reorder(label, value/npid, .desc = TRUE), value/npid, fill = Interval)) +
  geom_col(position = position_dodge(preserve = "single")) +
  scale_y_continuous(labels = scales::percent) +
  scale_x_discrete(labels = \(x) str_wrap(x, 20)) +
  scale_fill_manual("Last four weeks", values = colors) +
  labs(title = "Symptoms") +
  guides(fill = guide_legend(reverse = TRUE)) +
  theme(
    axis.title = element_blank(),
    axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
    legend.position = "inside",
    legend.position.inside = c(0.8, 0.7)
  )
```


```{r}
nosymptoms_p <- symptoms %>% 
  filter(str_detect(label, "No symptoms")) %>% 
  ggplot(aes(Interval, value/npid)) +
  geom_point(color = colors[1]) +
  geom_line(aes(group = 1), color = colors[1]) +
  labs(title = str_wrap("Proportion of users with no symptoms", width = 15)) +
  scale_y_continuous(labels = scales::percent, limits = c(0, NA)) +
  theme(
    axis.title = element_blank(),
    axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)
  )
(symptoms_p + nosymptoms_p) + plot_layout(widths = c(0.8, 0.2))
```


```{r, include=FALSE}
symptoms_p
```


```{r, include=FALSE}
lwr <- wri %>% 
  filter(as.numeric(fct_rev(Interval)) == 2) 

pca_res <- lwr %>% 
  select(participantID, label, value) %>% 
  pivot_wider(names_from = label, values_from = value) %>% 
  select(where(is.logical)) %>% 
  mutate(across(everything(), as.numeric)) %>% 
  select(where(~n_distinct(.) > 1), -"No symptoms") %>% 
  prcomp(scale. = TRUE)

autoplot(
  pca_res, 
  color = "#2C5696",
  loadings = TRUE, 
  loadings.label = TRUE, 
  loadings.colour = "#EEA230",
  loadings.label.colour = "#D92321",
  loadings.label.repel = TRUE
  ) +
  labs(title = "Distribution of users by symptoms (last week)")
```


## Row


```{r}
others <- sum(demographics$Gender=="Other")
demographics %>% 
  filter(Gender %in% c("Female", "Male")) %>% 
  count(Gender, age_group) %>% 
  mutate(p = n / sum(n)) %>% 
  ggplot(aes(if_else(Gender == "Female", -p, p), age_group, fill = Gender)) +
  geom_col() +
  # geom_text(aes(label = abs(n)), color = "black") +
  scale_x_continuous(labels = \(x) scales::percent(abs(x))) +
  scale_y_discrete("Age group") +
  scale_fill_manual(values = colors[3:4], limits = rev) +
  labs(
    title = "Population",
    caption = paste0("'Other': ", others, " (", scales::percent(others / active_users_n), ")")
    ) +
  theme(
    legend.title = element_blank(),
    axis.title.x = element_blank()
    )
```


```{r}
centroids_sf <- df_sf %>%
  group_by(sihtnumber) %>% 
  summarize(geometry = st_union(geometry)) %>% 
  st_centroid
participans_by_sn <- demographics %>% 
  select(participantID, sihtnumber = zip_code, Gender, Age = age) %>% 
  drop_na() %>% 
  inner_join(
    centroids_sf
      ) %>% 
  st_as_sf(crs = 25884)

ggplot(data = mk) +
  geom_sf(fill = "#CCE0F1") +
  geom_sf(data = participans_by_sn, color = "#39870C", alpha = 1/3) +
  # scale_shape_manual(values = c(Male = "\u2642", Female = "\u2640", Other = "\u26A5")) +
  labs(title = "Geographic distribution of users") +
  coord_sf() +
  theme(
    panel.grid.major = element_blank(), 
    panel.background = element_blank(),
    axis.text = element_blank()
    )
```

